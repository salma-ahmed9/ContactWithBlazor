@page "/ContactList"
@inject HttpClient Http;
@inject NavigationManager nav;
@inject AuthenticationStateProvider CustomAuthenticationStateProvider
@using ContactWithBlazor.Client;

<AuthorizeView>
    <Authorized>
        <div class="card" style="margin:19px;">
            <h2 style="text-align:center; padding:12px;">Contact List</h2>
        </div>
        <p style="padding-left:17px; font-weight:600"> you can search for a contact by entering first name , last name or email</p>
        <div class="mb-3" style="margin-left:20px;  ">
            <div class="row">
                <div class="col-3">
                    <form>
                        <input type="text" id="searchby" onkeyup="getData()" style="width:400px;" placeholder=" search by first name , last name or email ..." />
                    </form>
                </div>
            </div>
        </div>
        <div style="padding:20px;">
            <table class="table table-bordered table-striped">
                <thead style="background-color: cornflowerblue;">
                    <tr>
                        <th>
                            First name
                        </th>
                        <th>
                            Last name
                        </th>
                        <th>
                            Email
                        </th>
                        <th>
                            Title
                        </th>
                        <th>
                            Description
                        </th>
                        <th>
                            Date of birth
                        </th>
                        <th>
                            Marriage status
                        </th>
                        <AuthorizeView Context="authContext" Roles="Admin">
                            <Authorized><th>Actions</th></Authorized>
                        </AuthorizeView>
                        
                    </tr>
                </thead>
                <tbody id="myTable">
                    @foreach (var item in ContactList)
                    {
                        <tr>
                            <th>@item.FirstName</th>
                            <th>@item.LastName</th>
                            <th>@item.Email</th>
                            <th>@item.Title</th>
                            <th>@item.Description</th>
                            <th>@item.BirthDate.Date</th>
                            <th>@(item.MarriageStatus ? "Yes" : "NO") </th>
                            <AuthorizeView Context="authContext" Roles="Admin">
                                <Authorized>
                                    <th>
                                        <div style="display: flex;">
                                            <button type="submit" class="btn" @onclick="async () => await Edit(item.Id.ToString())">Edit</button>
                                            <button type="submit" class="btn btn-red" @onclick="async () => await Delete(item.Id.ToString())">Delete</button>
                                        </div>
                                    </th>
                                    
                                </Authorized>
                            </AuthorizeView>
                           
                        </tr>
                    }
                    <style>
                        .btn {
                            text-decoration: none;
                            background-color: deeppink;
                            color: white;
                            margin-right: 10px;
                        }

                        .btn-red {
                            text-decoration: none;
                            background-color: darkred;
                            color: white;
                        }
                    </style>
                </tbody>
            </table>
        </div>
    </Authorized>
</AuthorizeView>


@code {
    public List<Contact> ContactList { get; set; } = new();
    protected override async Task OnInitializedAsync()
    {
        ContactList = await Http.GetFromJsonAsync<List<Contact>>("/existingcontact");
    }
    private async Task Edit(string id)
    {
        nav.NavigateTo("/EditContact");
    }
    private async Task Delete(string id)
    {
        /*var response = await Http.DeleteAsync($"ContactList?handler=Delete&contactId={id}");
        var data = await response.Content.ReadFromJsonAsync<List<Contact>>();*/
       
        
    }
}
